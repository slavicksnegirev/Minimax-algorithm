# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'minimax_algorithm.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from logic import *
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_minimax_algorithm_window(object):
    def setupUi(self, minimax_algorithm_window):
        minimax_algorithm_window.setObjectName("minimax_algorithm")
        minimax_algorithm_window.resize(405, 136)

        self.verticalLayout = QtWidgets.QVBoxLayout(minimax_algorithm_window)
        self.verticalLayout.setObjectName("verticalLayout")

        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")

        self.label = QtWidgets.QLabel(minimax_algorithm_window)
        self.label.setObjectName("label")
        self.horizontalLayout_2.addWidget(self.label)

        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)

        self.comboBox = QtWidgets.QComboBox(minimax_algorithm_window)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.horizontalLayout_2.addWidget(self.comboBox)
        self.verticalLayout.addLayout(self.horizontalLayout_2)

        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.label_2 = QtWidgets.QLabel(minimax_algorithm_window)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.label_2)

        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)

        self.comboBox_2 = QtWidgets.QComboBox(minimax_algorithm_window)
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.horizontalLayout.addWidget(self.comboBox_2)
        self.verticalLayout.addLayout(self.horizontalLayout)

        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem2)

        self.buttonBox = QtWidgets.QDialogButtonBox(minimax_algorithm_window)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)

        self.retranslateUi(minimax_algorithm_window)
        self.buttonBox.accepted.connect(minimax_algorithm_window.accept) # type: ignore
        self.buttonBox.rejected.connect(minimax_algorithm_window.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(minimax_algorithm_window)

    def retranslateUi(self, minimax_algorithm_window):
        _translate = QtCore.QCoreApplication.translate
        minimax_algorithm_window.setWindowTitle(_translate("minimax_algorithm", "Минимаксный алгоритм"))
        self.label.setText(_translate("minimax_algorithm", "Порядок анализа листьев дерева:"))
        self.comboBox.setItemText(0, _translate("minimax_algorithm", "слева-направо"))
        self.comboBox.setItemText(1, _translate("minimax_algorithm", "справа-налево"))
        self.label_2.setText(_translate("minimax_algorithm", "Первый ход принадлежит игроку:"))
        self.comboBox_2.setItemText(0, _translate("minimax_algorithm", "max"))
        self.comboBox_2.setItemText(1, _translate("minimax_algorithm", "min"))

    def show_data(self):
        return self.comboBox.currentText(), self.comboBox_2.currentText()


def minimax_algorithm_dialog():
    # global minimax_algorithm_window
    minimax_algorithm_window = QtWidgets.QDialog()
    ui = Ui_minimax_algorithm_window()
    ui.setupUi(minimax_algorithm_window)
    minimax_algorithm_window.show()

    if minimax_algorithm_window.exec():
        text_output.append(f"Порядок анализа листьев дерева: {ui.show_data()[0]}\n")
        text_output.append(f"Первый ход принадлжет игроку: {ui.show_data()[1]}\n")
        text_output.append("\nВывод протокола:\n")

        if ui.show_data()[0] == "слева-направо" and ui.show_data()[1] == "max":
            minimax(trees_dict[current_tree_var.get()], "1", 4, False, True)
        elif ui.show_data()[0] == "слева-направо" and ui.show_data()[1] == "min":
            minimax(trees_dict[current_tree_var.get()], "1", 4, False, False)
        elif ui.show_data()[0] == "справа-налево" and ui.show_data()[1] == "max":
            minimax(trees_dict[current_tree_var.get()], "1", 4, True, True)
        elif ui.show_data()[0] == "справа-налево" and ui.show_data()[1] == "min":
            minimax(trees_dict[current_tree_var.get()], "1", 4, True, False)